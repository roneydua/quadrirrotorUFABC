<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="pt-BR">
  <compounddef id="TELEMETRIA_8cpp" kind="file" language="C++">
    <compoundname>TELEMETRIA.cpp</compoundname>
    <includes refid="TELEMETRIA_8h" local="yes">TELEMETRIA.h</includes>
    <includes local="yes">Arduino.h</includes>
    <incdepgraph>
      <node id="6">
        <label>esp_now.h</label>
      </node>
      <node id="3">
        <label>eigen3/Eigen/Dense</label>
      </node>
      <node id="2">
        <label>TELEMETRIA.h</label>
        <link refid="TELEMETRIA_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>lib/TELEMETRIA/TELEMETRIA.cpp</label>
        <link refid="TELEMETRIA_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Arduino.h</label>
      </node>
      <node id="5">
        <label>WiFi.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>: roney </para>
</simplesect>
<simplesect kind="date"><para>: 2021-05-07T10:25:15-03:00 email: <ulink url="mailto:roneyddasilva@gmail.com">roneyddasilva@gmail.com</ulink></para>
</simplesect>
Last modified by: roney Last modified time: 2021-05-07T10:27:01-03:00 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="TELEMETRIA_8h" kindref="compound">TELEMETRIA.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Arduino.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classTELEMETRIA_1ae47c01609eec8284a663dd66e0d7c632" refkind="member"><highlight class="normal"><ref refid="classTELEMETRIA_1ae47c01609eec8284a663dd66e0d7c632" kindref="member">TELEMETRIA::TELEMETRIA</ref>()<sp/>{<sp/><ref refid="classTELEMETRIA_1a780be82ef9be2da12601a0ea7d10e647" kindref="member">begin</ref>();<sp/>}</highlight></codeline>
<codeline lineno="20" refid="classTELEMETRIA_1a780be82ef9be2da12601a0ea7d10e647" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTELEMETRIA_1a780be82ef9be2da12601a0ea7d10e647" kindref="member">TELEMETRIA::begin</ref>()<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>disconeta<sp/>WIfi<sp/>para<sp/>evitar<sp/>instabilidades</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>WiFi.disconnect();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>inicializa<sp/>wifi<sp/>em<sp/>modo<sp/>station</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>WiFi.mode(WIFI_STA);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>tenta<sp/>estabelecer<sp/>coneccao</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(esp_now_init()<sp/>!=<sp/>ESP_OK)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>ESP.restart();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;ESP<sp/>Inicializado&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Criamos<sp/>uma<sp/>variável<sp/>que<sp/>irá<sp/>guardar<sp/>as<sp/>informações<sp/>do<sp/>slave</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>esp_now_peer_info_t<sp/>slave;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>slave.channel<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Informamos<sp/>o<sp/>canal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>slave.encrypt<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>0<sp/>para<sp/>não<sp/>usar<sp/>criptografia<sp/>ou<sp/>1<sp/>para<sp/>usar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copia<sp/>o<sp/>endereço<sp/>do<sp/>array<sp/>para<sp/>a<sp/>estrutura</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>memcpy(slave.peer_addr,<sp/><ref refid="classTELEMETRIA_1aacd01aa79091d1ee7dc4725e30a73d23" kindref="member">_broadcast</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classTELEMETRIA_1aacd01aa79091d1ee7dc4725e30a73d23" kindref="member">_broadcast</ref>));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>esp_now_add_peer(&amp;slave);<sp/></highlight><highlight class="comment">//<sp/>Adiciona<sp/>o<sp/>slave</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>esp_now_register_recv_cb(<ref refid="classTELEMETRIA_1ace27ccd5888ebc3802a4eb22cc3fd9da" kindref="member">OnDataRecv</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46" refid="classTELEMETRIA_1a235abb2ba6888140e7dab2e73a050049" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTELEMETRIA_1a235abb2ba6888140e7dab2e73a050049" kindref="member">TELEMETRIA::envia</ref>()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Array<sp/>que<sp/>irá<sp/>armazenar<sp/>os<sp/>valores<sp/>lidos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IMU_DATA<sp/>imu;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>float<sp/>temp[_a.size()];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>imu.quantidadeValida<sp/>=<sp/>quant;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_BY_SERIAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classTELEMETRIA_1a71317d1e99e1776c4b19738f53d52650" kindref="member">imu</ref>.<ref refid="structTELEMETRIA_1_1IMU__DATA_1adc59258e2c8a5593dffe9007176675d1" kindref="member">dadosEigen</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%f<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="classTELEMETRIA_1a71317d1e99e1776c4b19738f53d52650" kindref="member">imu</ref>.<ref refid="structTELEMETRIA_1_1IMU__DATA_1afdccdf0630d2607a54ec162276801027" kindref="member">dados</ref>[i]);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bs[<ref refid="TELEMETRIA_8h_1af55149bc1f05cf18af067a302e31e3f9" kindref="member">DATA_SIZE</ref><sp/>*<sp/>4];</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>memcpy(&amp;bs,<sp/>&amp;<ref refid="classTELEMETRIA_1a71317d1e99e1776c4b19738f53d52650" kindref="member">imu</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(bs));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>esp_now_send(<ref refid="classTELEMETRIA_1aacd01aa79091d1ee7dc4725e30a73d23" kindref="member">_broadcast</ref>,<sp/>bs,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(bs));</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63" refid="classTELEMETRIA_1ac3b8fa789f6d00dca33ea41b4fd865c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTELEMETRIA_1ac3b8fa789f6d00dca33ea41b4fd865c7" kindref="member">TELEMETRIA::enviaTunningGains</ref>()<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bs[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classTELEMETRIA_1a2cbf1b032f8a825a10b2d339aa27084c" kindref="member">gainsTunning</ref>)];</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>memcpy(&amp;bs,<sp/>&amp;<ref refid="classTELEMETRIA_1a2cbf1b032f8a825a10b2d339aa27084c" kindref="member">gainsTunning</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classTELEMETRIA_1a2cbf1b032f8a825a10b2d339aa27084c" kindref="member">gainsTunning</ref>));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>esp_now_send(<ref refid="classTELEMETRIA_1aacd01aa79091d1ee7dc4725e30a73d23" kindref="member">_broadcast</ref>,<sp/>bs,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(bs));</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69" refid="classTELEMETRIA_1a6c13ae22d648afb2c7bd41f3e17ba4b6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTELEMETRIA_1a6c13ae22d648afb2c7bd41f3e17ba4b6" kindref="member">TELEMETRIA::enviaMensagem</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*aviso)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="structTELEMETRIA_1_1MENSAGEM" kindref="compound">MENSAGEM</ref><sp/>msg;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>strcpy(msg.<ref refid="structTELEMETRIA_1_1MENSAGEM_1a39b1c3e6ce2fed1184fba64fbd81721d" kindref="member">info</ref>,<sp/>aviso);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_BY_SERIAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>printf(msg.<ref refid="structTELEMETRIA_1_1MENSAGEM_1a39b1c3e6ce2fed1184fba64fbd81721d" kindref="member">info</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Serial.println(msg.info);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bs[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg)];</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>memcpy(&amp;bs,<sp/>&amp;msg,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>esp_now_send(<ref refid="classTELEMETRIA_1aacd01aa79091d1ee7dc4725e30a73d23" kindref="member">_broadcast</ref>,<sp/>bs,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(bs));</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>funcao<sp/>responsavel<sp/>por<sp/>receber<sp/>dados</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classTELEMETRIA_1ace27ccd5888ebc3802a4eb22cc3fd9da" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTELEMETRIA_1ace27ccd5888ebc3802a4eb22cc3fd9da" kindref="member">TELEMETRIA::OnDataRecv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*_broadcast,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<ref refid="GPS_8h_1a27c939ba1a4f4d927aaa500781293ba7" kindref="member">data</ref>,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>data_len)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="classTELEMETRIA" kindref="compound">TELEMETRIA</ref><sp/><ref refid="classTELEMETRIA_1ae47c01609eec8284a663dd66e0d7c632" kindref="member">TELEMETRIA</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Para<sp/>cada<sp/>pino</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="classTELEMETRIA_1aa7dcf13d1ec896ed759e16d47a6d31fb" kindref="member">controle</ref><sp/>ctrl;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>memcpy(&amp;ctrl,<sp/><ref refid="GPS_8h_1a27c939ba1a4f4d927aaa500781293ba7" kindref="member">data</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="classTELEMETRIA_1aa7dcf13d1ec896ed759e16d47a6d31fb" kindref="member">controle</ref>));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>atualizacontrole(ctrl.dados);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="classTELEMETRIA_1a1282e1b8ab4ecaa1fd4fb1837b4d12d6" kindref="member">TELEMETRIA::comAceito</ref><sp/>=<sp/>ctrl.dados;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal">uint8_t<sp/><ref refid="classTELEMETRIA_1a1282e1b8ab4ecaa1fd4fb1837b4d12d6" kindref="member">TELEMETRIA::comAceito</ref>;</highlight></codeline>
<codeline lineno="93" refid="classTELEMETRIA_1a4098a02f670b029836ab05a2b2bff229" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classTELEMETRIA_1a4098a02f670b029836ab05a2b2bff229" kindref="member">TELEMETRIA::pisca</ref>(uint8_t<sp/>porta)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>digitalWrite(porta,<sp/>HIGH);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>delay(1000);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>digitalWrite(porta,<sp/>LOW);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>delay(1000);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="lib/TELEMETRIA/TELEMETRIA.cpp"/>
  </compounddef>
</doxygen>
