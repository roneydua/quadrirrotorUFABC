digraph "IMU"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="DejaVuSansMono",fontsize="8",labelfontname="DejaVuSansMono",labelfontsize="8"];
  node [fontname="DejaVuSansMono",fontsize="8",shape=record];
  Node1 [label="{IMU\n|+ Vector3f * _acel\l+ Vector3f * _gyro\l+ Vector3f * _mag\l+ Vector3f magTemp\l+ float _t\l+ const Matrix3f sFAccel\l+ Vector3f _biasAccel\l+ Vector3f _biasGyro\l+ Vector3f _biasMag\l+ Matrix3f _sM\l+ TwoWire * _i2c\l# uint8_t _buffer\l# int16_t _axcounts\l# int16_t _aycounts\l# int16_t _azcounts\l# int16_t _gxcounts\l# int16_t _gycounts\l# int16_t _gzcounts\l# int16_t _hxcounts\l# int16_t _hycounts\l# int16_t _hzcounts\l# int16_t _tcounts\l# uint8_t _address\l# size_t _numBytes\l# const uint32_t _i2cRate\l# int _status\l# const float gG\l# float _accelScale\l# float _gyroScale\l# float _magScaleX\l# float _magScaleY\l# float _magScaleZ\l# AccelRange _accelRange\l# GyroRange _gyroRange\l# DlpfBandwidth _bandwidth\l# uint8_t _srd\l# const uint8_t ACCEL_OUT\l# const uint8_t GYRO_OUT\l# const uint8_t TEMP_OUT\l# const uint8_t EXT_SENS\l_DATA_00\l# const uint8_t ACCEL\l_CONFIG\l# const uint8_t ACCEL\l_FS_SEL_2G\l# const uint8_t ACCEL\l_FS_SEL_4G\l# const uint8_t ACCEL\l_FS_SEL_8G\l# const uint8_t ACCEL\l_FS_SEL_16G\l# const uint8_t GYRO\l_CONFIG\l# const uint8_t GYRO\l_FS_SEL_250DPS\l# const uint8_t GYRO\l_FS_SEL_500DPS\l# const uint8_t GYRO\l_FS_SEL_1000DPS\l# const uint8_t GYRO\l_FS_SEL_2000DPS\l# const uint8_t ACCEL\l_CONFIG2\l# const uint8_t ACCEL\l_DLPF_184\l# const uint8_t ACCEL\l_DLPF_92\l# const uint8_t ACCEL\l_DLPF_41\l# const uint8_t ACCEL\l_DLPF_20\l# const uint8_t ACCEL\l_DLPF_10\l# const uint8_t ACCEL\l_DLPF_5\l# const uint8_t CONFIG\l# const uint8_t GYRO\l_DLPF_184\l# const uint8_t GYRO\l_DLPF_92\l# const uint8_t GYRO\l_DLPF_41\l# const uint8_t GYRO\l_DLPF_20\l# const uint8_t GYRO\l_DLPF_10\l# const uint8_t GYRO\l_DLPF_5\l# const uint8_t SMPDIV\l# const uint8_t INT_PIN_CFG\l# const uint8_t INT_ENABLE\l# const uint8_t INT_DISABLE\l# const uint8_t INT_PULSE_50US\l# const uint8_t INT_WOM_EN\l# const uint8_t INT_RAW\l_RDY_EN\l# const uint8_t PWR_MGMNT_1\l# const uint8_t PWR_CYCLE\l# const uint8_t PWR_RESET\l# const uint8_t CLOCK\l_SEL_PLL\l# const uint8_t PWR_MGMNT_2\l# const uint8_t SEN_ENABLE\l# const uint8_t DIS_GYRO\l# const uint8_t USER_CTRL\l# const uint8_t I2C_MST_EN\l# const uint8_t I2C_MST_CLK\l# const uint8_t I2C_MST_CTRL\l# const uint8_t I2C_SLV0_ADDR\l# const uint8_t I2C_SLV0_REG\l# const uint8_t I2C_SLV0_DO\l# const uint8_t I2C_SLV0_CTRL\l# const uint8_t I2C_SLV0_EN\l# const uint8_t I2C_READ_FLAG\l# const uint8_t MOT_DETECT_CTRL\l# const uint8_t ACCEL\l_INTEL_EN\l# const uint8_t ACCEL\l_INTEL_MODE\l# const uint8_t LP_ACCEL_ODR\l# const uint8_t WOM_THR\l# const uint8_t WHO_AM_I\l# const uint8_t AK8963\l_I2C_ADDR\l# const uint8_t AK8963_HXL\l# const uint8_t AK8963\l_CNTL1\l# const uint8_t AK8963\l_PWR_DOWN\l# const uint8_t AK8963\l_CNT_MEAS1\l# const uint8_t AK8963\l_CNT_MEAS2\l# const uint8_t AK8963\l_FUSE_ROM\l# const uint8_t AK8963\l_CNTL2\l# const uint8_t AK8963\l_RESET\l# const uint8_t AK8963_ASA\l# const uint8_t AK8963\l_WHO_AM_I\l|+  IMU(TwoWire &bus,\l uint8_t address)\l+ int begin(Vector3f\l &acel, Vector3f &gyro,\l Vector3f &mag)\l+ int readSensor()\l+ int setDlpfBandwidth\l(DlpfBandwidth bandwidth)\l+ int setGyroRange(GyroRange\l range)\l+ int setAccelRange(AccelRange\l range)\l+ void calibraGyro(int\l N=100)\l+ int calibracaoMagnetometro\l(float moduloCampo)\l# int writeRegister(uint8\l_t subAddress, uint8_t data)\l# int readRegisters(uint8\l_t subAddress, uint8_t\l count, uint8_t *dest)\l# int writeAK8963Register\l(uint8_t subAddress, uint8\l_t data)\l# int whoAmI()\l# int whoAmIAK8963()\l# int readAK8963Registers\l(uint8_t subAddress, uint8\l_t count, uint8_t *dest)\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
}
